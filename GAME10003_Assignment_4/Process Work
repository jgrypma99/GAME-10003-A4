TICTACTOE GAME

My part of working on this game was that I had to make a prototype of the code for the game
so that others could add their ideas and parts to it.
In order to recreate this game in c #, first of all it is necessary to understand the details.
Below is my analysis of the code for the game and how it should work

1. Initialization:
● Initialize necessary variables:
● screenWidth and screenHeight: Set the dimensions of the game
window.
● boardSize: Set the size of the game board.
● board: Initialize the game board as a 2D array.
● currentPlayer: Initialize the current player (1 or 2).
● gameOver: Initialize the game over flag.
2. Game Loop:
● Enter the game loop:
● Check if the window should close or if the game is over.
● Clear the background for rendering.
● Draw the game board:
● Iterate over each cell of the board.
● Draw X or O if a player has marked the cell.
● Draw cell borders.
● Check for player input:
● If the left mouse button is pressed:
● Get the cell clicked by the player.
● Check if the cell is empty and the game is not
over:
● Mark the cell with the current player's
symbol.
● Check for win condition.
● Check for draw condition.
● Switch players if the game is still ongoing.
● End drawing for the current frame.
3. Win Condition Check (CheckWin method):
● Check rows and columns for the presence of the current player's
symbol in a winning configuration.
● Check diagonals for the presence of the current player's symbol in a
winning configuration.
● Return true if a win condition is met, otherwise return false.
static bool CheckWin(int[,] board, int player)
{
  for (int i = 0; i < 3; i++)
  {
    if ((board[i, 0] == player && board[i, 1] == player && board[i,
2] == player) ||(board[0, i] == player && board[1, i] == player && board[2,
i] == player))
    {
      return true;
    }
  }
  if ((board[0, 0] == player && board[1, 1] == player && board[2, 2]
== player) ||c(board[0, 2] == player && board[1, 1] == player && board[2, 0]
== player))
  {
    return true;
  }
  return false;
}
4. Draw Condition Check (IsBoardFull method):
● Check if there are any empty cells left on the board.
● If all cells are filled, return true, indicating a draw; otherwise, return false.
5. Closing the Window:
● Close the game window after the game loop exits
